{"ast":null,"code":"var _jsxFileName = \"E:\\\\365_days-challenge\\\\Day1\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/**\r\n * Main App Component\r\n * Universal Authentication System with routing and smooth scrolling\r\n * Day 1 of 365 Days Challenge\r\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport { useLenis } from './utils/useLenis';\nimport './styles/auth.css';\n\n// Main Authentication Router Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthRouter = () => {\n  _s();\n  const [currentView, setCurrentView] = useState('login');\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  // Initialize Lenis smooth scrolling\n  const {\n    scrollToTop\n  } = useLenis({\n    duration: 1.5,\n    easing: t => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    smooth: true\n  });\n\n  // Handle view transitions with smooth scrolling\n  const handleViewChange = newView => {\n    setCurrentView(newView);\n    scrollToTop({\n      duration: 0.8\n    });\n    navigate(`/${newView}`);\n  };\n\n  // Handle successful login\n  const handleLoginSuccess = loginData => {\n    console.log('Login successful:', loginData);\n    setUser({\n      email: loginData.email,\n      loginTime: new Date().toISOString()\n    });\n\n    // In a real app, you would:\n    // 1. Store JWT token in localStorage/sessionStorage\n    // 2. Set up axios interceptors for API calls\n    // 3. Redirect to dashboard or main app\n\n    // For demo purposes, show success message\n    alert('Login successful! In a real app, you would be redirected to the dashboard.');\n  };\n\n  // Handle successful signup\n  const handleSignupSuccess = signupData => {\n    console.log('Signup successful:', signupData);\n    setUser({\n      email: signupData.email,\n      firstName: signupData.firstName,\n      lastName: signupData.lastName,\n      signupTime: new Date().toISOString()\n    });\n\n    // In a real app, you would:\n    // 1. Send email verification\n    // 2. Store JWT token\n    // 3. Redirect to onboarding or main app\n\n    // For demo purposes, show success message\n    alert('Account created successfully! In a real app, you would receive an email verification.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onSwitchToSignup: () => handleViewChange('signup'),\n          onLoginSuccess: handleLoginSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {\n          onSwitchToLogin: () => handleViewChange('login'),\n          onSignupSuccess: handleSignupSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n// Success Dashboard Component (placeholder)\n_s(AuthRouter, \"oUKUGEItd3oZC7rVKbNvJBbGeTk=\", false, function () {\n  return [useNavigate, useLenis];\n});\n_c = AuthRouter;\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", user.firstName || user.email, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have successfully logged in to the universal authentication system.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Information:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), \" \", user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), user.firstName && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 48\n            }, this), \" \", user.firstName, \" \", user.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Login Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), \" \", new Date(user.loginTime || user.signupTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n// Main App Component\n_c2 = Dashboard;\nconst App = () => {\n  _s2();\n  const [user, setUser] = useState(null);\n\n  // Check for existing session on app load\n  useEffect(() => {\n    const checkExistingSession = () => {\n      // In a real app, you would check for valid JWT token\n      const savedUser = localStorage.getItem('universalAuth_user');\n      if (savedUser) {\n        try {\n          setUser(JSON.parse(savedUser));\n        } catch (error) {\n          console.error('Error parsing saved user data:', error);\n          localStorage.removeItem('universalAuth_user');\n        }\n      }\n    };\n    checkExistingSession();\n  }, []);\n\n  // Handle logout\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('universalAuth_user');\n    localStorage.removeItem('universalAuth_token');\n\n    // In a real app, you would also:\n    // 1. Call logout API endpoint\n    // 2. Clear all user-related data\n    // 3. Reset global state\n  };\n\n  // Save user data when user state changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('universalAuth_user', JSON.stringify(user));\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [user ? /*#__PURE__*/_jsxDEV(Dashboard, {\n        user: user,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(AuthRouter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"app-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Universal Auth System - Day 1 of 365 Days Challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n};\n_s2(App, \"yy5ZvVAQsprr2pHcLIzfQbyK1Yg=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AuthRouter\");\n$RefreshReg$(_c2, \"Dashboard\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","Login","Signup","useLenis","jsxDEV","_jsxDEV","AuthRouter","_s","currentView","setCurrentView","user","setUser","navigate","scrollToTop","duration","easing","t","Math","min","pow","smooth","handleViewChange","newView","handleLoginSuccess","loginData","console","log","email","loginTime","Date","toISOString","alert","handleSignupSuccess","signupData","firstName","lastName","signupTime","className","children","path","element","onSwitchToSignup","onLoginSuccess","fileName","_jsxFileName","lineNumber","columnNumber","onSwitchToLogin","onSignupSuccess","to","replace","_c","Dashboard","onLogout","onClick","toLocaleString","_c2","App","_s2","checkExistingSession","savedUser","localStorage","getItem","JSON","parse","error","removeItem","handleLogout","setItem","stringify","_c3","$RefreshReg$"],"sources":["E:/365_days-challenge/Day1/src/App.js"],"sourcesContent":["/**\r\n * Main App Component\r\n * Universal Authentication System with routing and smooth scrolling\r\n * Day 1 of 365 Days Challenge\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport { useLenis } from './utils/useLenis';\r\nimport './styles/auth.css';\r\n\r\n// Main Authentication Router Component\r\nconst AuthRouter = () => {\r\n    const [currentView, setCurrentView] = useState('login');\r\n    const [user, setUser] = useState(null);\r\n    const navigate = useNavigate();\r\n    \r\n    // Initialize Lenis smooth scrolling\r\n    const { scrollToTop } = useLenis({\r\n        duration: 1.5,\r\n        easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n        smooth: true\r\n    });\r\n\r\n    // Handle view transitions with smooth scrolling\r\n    const handleViewChange = (newView) => {\r\n        setCurrentView(newView);\r\n        scrollToTop({ duration: 0.8 });\r\n        navigate(`/${newView}`);\r\n    };\r\n\r\n    // Handle successful login\r\n    const handleLoginSuccess = (loginData) => {\r\n        console.log('Login successful:', loginData);\r\n        setUser({\r\n            email: loginData.email,\r\n            loginTime: new Date().toISOString()\r\n        });\r\n        \r\n        // In a real app, you would:\r\n        // 1. Store JWT token in localStorage/sessionStorage\r\n        // 2. Set up axios interceptors for API calls\r\n        // 3. Redirect to dashboard or main app\r\n        \r\n        // For demo purposes, show success message\r\n        alert('Login successful! In a real app, you would be redirected to the dashboard.');\r\n    };\r\n\r\n    // Handle successful signup\r\n    const handleSignupSuccess = (signupData) => {\r\n        console.log('Signup successful:', signupData);\r\n        setUser({\r\n            email: signupData.email,\r\n            firstName: signupData.firstName,\r\n            lastName: signupData.lastName,\r\n            signupTime: new Date().toISOString()\r\n        });\r\n        \r\n        // In a real app, you would:\r\n        // 1. Send email verification\r\n        // 2. Store JWT token\r\n        // 3. Redirect to onboarding or main app\r\n        \r\n        // For demo purposes, show success message\r\n        alert('Account created successfully! In a real app, you would receive an email verification.');\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Routes>\r\n                <Route \r\n                    path=\"/login\" \r\n                    element={\r\n                        <Login \r\n                            onSwitchToSignup={() => handleViewChange('signup')}\r\n                            onLoginSuccess={handleLoginSuccess}\r\n                        />\r\n                    } \r\n                />\r\n                <Route \r\n                    path=\"/signup\" \r\n                    element={\r\n                        <Signup \r\n                            onSwitchToLogin={() => handleViewChange('login')}\r\n                            onSignupSuccess={handleSignupSuccess}\r\n                        />\r\n                    } \r\n                />\r\n                <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\r\n            </Routes>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Success Dashboard Component (placeholder)\r\nconst Dashboard = ({ user, onLogout }) => {\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"dashboard-header\">\r\n                <h1>Welcome, {user.firstName || user.email}!</h1>\r\n                <button onClick={onLogout} className=\"logout-button\">\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div className=\"dashboard-content\">\r\n                <p>You have successfully logged in to the universal authentication system.</p>\r\n                <div className=\"user-info\">\r\n                    <h3>User Information:</h3>\r\n                    <ul>\r\n                        <li><strong>Email:</strong> {user.email}</li>\r\n                        {user.firstName && <li><strong>Name:</strong> {user.firstName} {user.lastName}</li>}\r\n                        <li><strong>Login Time:</strong> {new Date(user.loginTime || user.signupTime).toLocaleString()}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Main App Component\r\nconst App = () => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    // Check for existing session on app load\r\n    useEffect(() => {\r\n        const checkExistingSession = () => {\r\n            // In a real app, you would check for valid JWT token\r\n            const savedUser = localStorage.getItem('universalAuth_user');\r\n            if (savedUser) {\r\n                try {\r\n                    setUser(JSON.parse(savedUser));\r\n                } catch (error) {\r\n                    console.error('Error parsing saved user data:', error);\r\n                    localStorage.removeItem('universalAuth_user');\r\n                }\r\n            }\r\n        };\r\n\r\n        checkExistingSession();\r\n    }, []);\r\n\r\n    // Handle logout\r\n    const handleLogout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem('universalAuth_user');\r\n        localStorage.removeItem('universalAuth_token');\r\n        \r\n        // In a real app, you would also:\r\n        // 1. Call logout API endpoint\r\n        // 2. Clear all user-related data\r\n        // 3. Reset global state\r\n    };\r\n\r\n    // Save user data when user state changes\r\n    useEffect(() => {\r\n        if (user) {\r\n            localStorage.setItem('universalAuth_user', JSON.stringify(user));\r\n        }\r\n    }, [user]);\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app-container\">\r\n                {user ? (\r\n                    <Dashboard user={user} onLogout={handleLogout} />\r\n                ) : (\r\n                    <AuthRouter />\r\n                )}\r\n                \r\n                {/* Global App Footer */}\r\n                <footer className=\"app-footer\">\r\n                    <p>Universal Auth System - Day 1 of 365 Days Challenge</p>\r\n                </footer>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}